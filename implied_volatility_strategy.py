# -*- coding: utf-8 -*-
"""implied_volatility_strategy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fW7ZVk3Lqf7xJzNKIGei9H5-qfAldK5r
"""

# region imports
from AlgorithmImports import *
# endregion

class SwimmingAsparagusPenguin(QCAlgorithm):

    def initialize(self):
        self.set_start_date(2020, 1, 1)
        self.set_cash(100000)

        self.equity = self.add_equity("GME", Resolution.DAILY, data_normalization_mode=DataNormalizationMode.Raw)
        self.option = self.add_option("GME", Resolution.DAILY)
        self.option.set_filter(timedelta(0), timedelta(30))

        # Crear un gráfico personalizado para la volatilidad implícita
        chart = Chart("VolatilidadImplicita")
        chart.add_series(Series("IV", SeriesType.LINE, 0))
        self.add_chart(chart)

    def on_data(self, data: Slice):
        if not data.option_chains:
            return

        for chain in data.option_chains.values():
            contracts = sorted(chain, key=lambda x: x.volume, reverse=True)
            if not contracts:
                continue

            contract = contracts[0]  # Tomamos el contrato con mayor volumen

            # Graficar la volatilidad implícita
            if contract.implied_volatility is not None:
                self.plot("VolatilidadImplicita", "IV", contract.implied_volatility)

            if self.portfolio.invested:
                if contract.implied_volatility < 0.10:
                    self.liquidate("GME")
                    self.debug(f"Cierre: Fecha={self.time}, Volatilidad Implicita={contract.implied_volatility}")
            else:
                if contract.implied_volatility > 0.50:
                    self.set_holdings("GME", 1)
                    self.debug(f"Apertura: Fecha={self.time}, Volatilidad Implicita={contract.implied_volatility}")