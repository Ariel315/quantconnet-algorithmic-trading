# -*- coding: utf-8 -*-
"""hurst_exponent_calculation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VzzER22OTFQlCybgQj0teN7wbEkiEmgN
"""

from AlgorithmImports import *

class CalmSkyBlueMosquito(QCAlgorithm):
    def Initialize(self):
        self.SetStartDate(2020, 1, 1)  # Fecha de inicio

        self.SetCash(100000)  # Capital inicial

        #self.symbol = self.AddEquity("SPY", Resolution.Daily).Symbol
        # Selecciona el símbolo
        self.symbol = self.AddForex("EURJPY", Resolution.Daily, data_normalization_mode=DataNormalizationMode.Raw).Symbol

        # Configura el indicador Hurst Exponent
        self.hurst_period = 1288  # Periodo para el cálculo
        self.max_lag = 100  # Máximo desfase (lag)
        self.hurst_exponent = self.HE(self.symbol, self.hurst_period, self.max_lag, Resolution.Daily)

    def OnData(self, data):
        if not self.hurst_exponent.IsReady:
            return

        hurst_value = self.hurst_exponent.Current.Value

        if hurst_value < 0.45:
            self.Debug(f"{self.symbol}: Hurst Exponent indica reversión a la media ({hurst_value:.4f})")
        elif hurst_value > 0.55:
            self.Debug(f"{self.symbol}: Hurst Exponent indica tendencia ({hurst_value:.4f})")
        else:
            self.Debug(f"{self.symbol}: Hurst Exponent indica movimiento aleatorio ({hurst_value:.4f})")